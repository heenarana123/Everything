#https://m.facebook.com/story.php?story_fbid=2734956710125224&id=100008327644126
#Subsceibed by heena rana


// these will tell us d nesting of member function

#include <iostream>
#include <string>

using namespace std;
class binary
{

    string h;

public:
    void read(void);
    void chk_bin(void);
    
};

void binary ::read(void)
{
    cout << "enter a bianry no" << endl;
    cin >> h;
}
void binary :: chk_bin(void)
{
    for (int i = 0; i < h.length(); i++)
    {

        if (h.at(i) != '0' && h.at(i) != '1')
        {
            cout << "incorrect statement " << endl;
            exit(0);
        }
    }

    {
        /* code */
    }
}
void ones(void){

}
int main()
{
    //oops classes and object
    //c++----> initially call --->c with classes by stroustroup
    //class---> ebxtention of structure (in c)
    // structure had limitation ---> members are oublic
    //                           --> no methods
    //    classes --> structures + more
    //classes ---> can have methods and properties
    //classes----->can make few members as private and few as public
    //structure are typedef
    //u can declare objects along with d class declaration like these
    // i,e  class emp{
    //class defination
    // }   //harry, rohan, lewish
    //rana.salary-- it makes no sence if salry is private
    //nesting of member function
    binary b;
    b.read();
    b.chk_bin();

   

    return 0;  
}
